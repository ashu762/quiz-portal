[{"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\index.js":"1","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reportWebVitals.js":"2","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reducers\\userReducers.js":"3","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Loaders.js":"4","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Check.js":"5","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\EmptyScreen\\index.js":"6","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\QuestionList.js":"7","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\NoQuestion\\index.js":"8","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\QuizPage.js":"9","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\RegisterPage.js":"10","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\QuizComponent.js":"11","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\CreateQuiz.js":"12","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\PostQuestions.js":"13","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\HomeScreen.js":"14","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\CheckList.js":"15","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\MyQuizComponent.js":"16","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\LoginPage.js":"17","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\MyQuiz.js":"18","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\quizActions.js":"19","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\userActions.js":"20","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\WelcomePage.js":"21","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\My.js":"22","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reducers\\quizReducers.js":"23","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Question\\index.js":"24","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\constants\\userConstants.js":"25","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\store.js":"26","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\constants\\quizConstants.js":"27","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\App.js":"28","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Header.js":"29","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Result.js":"30","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Footer\\index.js":"31","D:\\React Codes\\QuizMaker\\quizmaker\\src\\index.js":"32","D:\\React Codes\\QuizMaker\\quizmaker\\src\\reducers\\userReducers.js":"33","D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\WelcomePage.js":"34","D:\\React Codes\\QuizMaker\\quizmaker\\src\\constants\\quizConstants.js":"35","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\QuizComponent.js":"36","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\Check.js":"37","D:\\React Codes\\QuizMaker\\quizmaker\\src\\actions\\quizActions.js":"38","D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\LoginPage.js":"39","D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\CreateQuiz.js":"40","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\Question\\index.js":"41","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\QuestionList.js":"42","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\CheckList.js":"43","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\Header.js":"44","D:\\React Codes\\QuizMaker\\quizmaker\\src\\reportWebVitals.js":"45","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\EmptyScreen\\index.js":"46","D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\QuizPage.js":"47","D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\RegisterPage.js":"48","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\NoQuestion\\index.js":"49","D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\PostQuestions.js":"50","D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\MyQuiz.js":"51","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\MyQuizComponent.js":"52","D:\\React Codes\\QuizMaker\\quizmaker\\src\\actions\\userActions.js":"53","D:\\React Codes\\QuizMaker\\quizmaker\\src\\reducers\\quizResponseReducers.js":"54","D:\\React Codes\\QuizMaker\\quizmaker\\src\\store.js":"55","D:\\React Codes\\QuizMaker\\quizmaker\\src\\actions\\quizResponseActions.js":"56","D:\\React Codes\\QuizMaker\\quizmaker\\src\\App.js":"57","D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\HomeScreen.js":"58","D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\QuizDetailsPage\\index.js":"59","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\NoAccessPage\\index.js":"60","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\Message.js":"61","D:\\React Codes\\QuizMaker\\quizmaker\\src\\reducers\\quizReducers.js":"62","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\ResponsePdf\\ResponsePdf.js":"63","D:\\React Codes\\QuizMaker\\quizmaker\\src\\actions\\My.js":"64","D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\FileUploadPage.js":"65","D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\NotFound.js":"66","D:\\React Codes\\QuizMaker\\quizmaker\\src\\constants\\userConstants.js":"67","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\Result.js":"68","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\QuestionDetails\\index.js":"69","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\UpdateQuestion\\index.js":"70","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\AddQuestion.js":"71","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\TimePicker.js":"72","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\FormContainer.js":"73","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\Loaders.js":"74","D:\\React Codes\\QuizMaker\\quizmaker\\src\\constants\\quizResponseConstants.js":"75"},{"size":594,"mtime":1632672217133,"results":"76","hashOfConfig":"77"},{"size":375,"mtime":1632672217138,"results":"78","hashOfConfig":"77"},{"size":1000,"mtime":1632672217137,"results":"79","hashOfConfig":"77"},{"size":499,"mtime":1633156874459,"results":"80","hashOfConfig":"77"},{"size":641,"mtime":1632672217117,"results":"81","hashOfConfig":"77"},{"size":338,"mtime":1632673641119,"results":"82","hashOfConfig":"77"},{"size":2915,"mtime":1633172241221,"results":"83","hashOfConfig":"77"},{"size":407,"mtime":1632673748191,"results":"84","hashOfConfig":"77"},{"size":533,"mtime":1632672217147,"results":"85","hashOfConfig":"77"},{"size":3585,"mtime":1633147223903,"results":"86","hashOfConfig":"77"},{"size":1036,"mtime":1633140794716,"results":"87","hashOfConfig":"77"},{"size":3398,"mtime":1633146449140,"results":"88","hashOfConfig":"77"},{"size":6661,"mtime":1633170279515,"results":"89","hashOfConfig":"77"},{"size":1421,"mtime":1633147206113,"results":"90","hashOfConfig":"77"},{"size":346,"mtime":1633141405669,"results":"91","hashOfConfig":"77"},{"size":1786,"mtime":1633147126665,"results":"92","hashOfConfig":"77"},{"size":2742,"mtime":1633147240751,"results":"93","hashOfConfig":"77"},{"size":1354,"mtime":1633147266434,"results":"94","hashOfConfig":"77"},{"size":6090,"mtime":1633156407224,"results":"95","hashOfConfig":"77"},{"size":1962,"mtime":1632672217116,"results":"96","hashOfConfig":"77"},{"size":860,"mtime":1632672217148,"results":"97","hashOfConfig":"77"},{"size":140,"mtime":1632672217113,"results":"98","hashOfConfig":"77"},{"size":2857,"mtime":1632672217137,"results":"99","hashOfConfig":"77"},{"size":3887,"mtime":1633172204302,"results":"100","hashOfConfig":"77"},{"size":393,"mtime":1632672217133,"results":"101","hashOfConfig":"77"},{"size":1128,"mtime":1632672217151,"results":"102","hashOfConfig":"77"},{"size":1109,"mtime":1632672217132,"results":"103","hashOfConfig":"77"},{"size":1652,"mtime":1633170519272,"results":"104","hashOfConfig":"77"},{"size":2227,"mtime":1633161939418,"results":"105","hashOfConfig":"77"},{"size":120,"mtime":1632672217129,"results":"106","hashOfConfig":"77"},{"size":283,"mtime":1633170760011,"results":"107","hashOfConfig":"77"},{"size":693,"mtime":1636806853720,"results":"108","hashOfConfig":"109"},{"size":1000,"mtime":1635775208714,"results":"110","hashOfConfig":"109"},{"size":860,"mtime":1635775208725,"results":"111","hashOfConfig":"109"},{"size":1307,"mtime":1637162753191,"results":"112","hashOfConfig":"109"},{"size":1040,"mtime":1635912879367,"results":"113","hashOfConfig":"109"},{"size":528,"mtime":1635782001567,"results":"114","hashOfConfig":"109"},{"size":6967,"mtime":1637380654716,"results":"115","hashOfConfig":"109"},{"size":2691,"mtime":1635780697913,"results":"116","hashOfConfig":"109"},{"size":4048,"mtime":1637380626952,"results":"117","hashOfConfig":"109"},{"size":3782,"mtime":1637406220211,"results":"118","hashOfConfig":"109"},{"size":2740,"mtime":1637388859807,"results":"119","hashOfConfig":"109"},{"size":346,"mtime":1635781941432,"results":"120","hashOfConfig":"109"},{"size":1750,"mtime":1635784989351,"results":"121","hashOfConfig":"109"},{"size":375,"mtime":1635775208715,"results":"122","hashOfConfig":"109"},{"size":338,"mtime":1635775208694,"results":"123","hashOfConfig":"109"},{"size":2971,"mtime":1637488655700,"results":"124","hashOfConfig":"109"},{"size":3585,"mtime":1635775208724,"results":"125","hashOfConfig":"109"},{"size":407,"mtime":1635775208700,"results":"126","hashOfConfig":"109"},{"size":6661,"mtime":1635775208722,"results":"127","hashOfConfig":"109"},{"size":1354,"mtime":1635775208719,"results":"128","hashOfConfig":"109"},{"size":2142,"mtime":1637404392025,"results":"129","hashOfConfig":"109"},{"size":2031,"mtime":1635825833527,"results":"130","hashOfConfig":"109"},{"size":572,"mtime":1635827038686,"results":"131","hashOfConfig":"109"},{"size":1334,"mtime":1637162987973,"results":"132","hashOfConfig":"109"},{"size":1292,"mtime":1637163569719,"results":"133","hashOfConfig":"109"},{"size":1950,"mtime":1637159848175,"results":"134","hashOfConfig":"109"},{"size":2177,"mtime":1637385449676,"results":"135","hashOfConfig":"109"},{"size":4558,"mtime":1637482523259,"results":"136","hashOfConfig":"109"},{"size":270,"mtime":1635908739403,"results":"137","hashOfConfig":"109"},{"size":254,"mtime":1635775208698,"results":"138","hashOfConfig":"109"},{"size":3355,"mtime":1637163045715,"results":"139","hashOfConfig":"109"},{"size":4101,"mtime":1637209795804,"results":"140","hashOfConfig":"109"},{"size":140,"mtime":1635775208685,"results":"141","hashOfConfig":"109"},{"size":722,"mtime":1637389262929,"results":"142","hashOfConfig":"109"},{"size":127,"mtime":1635775208720,"results":"143","hashOfConfig":"109"},{"size":393,"mtime":1635775208709,"results":"144","hashOfConfig":"109"},{"size":120,"mtime":1635775208706,"results":"145","hashOfConfig":"109"},{"size":1523,"mtime":1637403288337,"results":"146","hashOfConfig":"109"},{"size":5051,"mtime":1637404155129,"results":"147","hashOfConfig":"109"},{"size":5025,"mtime":1637407852011,"results":"148","hashOfConfig":"109"},{"size":3406,"mtime":1637488606228,"results":"149","hashOfConfig":"109"},{"size":350,"mtime":1635775208695,"results":"150","hashOfConfig":"109"},{"size":499,"mtime":1635775208697,"results":"151","hashOfConfig":"109"},{"size":225,"mtime":1635825812061,"results":"152","hashOfConfig":"109"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},"b9q575",{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"155"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"155"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"155"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"155"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"178"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},"i7y62l",{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"233"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"233"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"267"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"233"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"233"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"233"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"233"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"233"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"233"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"311"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\index.js",[],["337","338"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reportWebVitals.js",[],["339","340"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reducers\\userReducers.js",[],["341","342"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Loaders.js",["343"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Check.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\EmptyScreen\\index.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\QuestionList.js",["344","345"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\NoQuestion\\index.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\QuizPage.js",["346"],"import React, { useEffect } from \"react\";\r\nimport QuestionList from \"../components/QuestionList\";\r\nimport { useSelector } from \"react-redux\";\r\nconst QuizPage = ({ match, history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  return (\r\n    <div>\r\n      <QuestionList id={match.params.id} history={history}></QuestionList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\RegisterPage.js",["347"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { register } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nconst RegisterPage = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState();\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, loading, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userLogin.userInfo) {\r\n      setMessage(\"User already registered\");\r\n      history.push(\"/\");\r\n    } else if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [userInfo]);\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password Do not Match\");\r\n      return;\r\n    } else dispatch(register(email, password, name, confirmPassword));\r\n  };\r\n  return (\r\n    <div>\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login\">REGISTER</h1>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && (\r\n          <Message variant=\"danger\">\r\n            Sever error. Please try again later\r\n          </Message>\r\n        )}\r\n        {loading && <Loaders />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label> Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"confirmpassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password Again\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n\r\n        <div className=\"d-flex justify-content-center mt-4\">\r\n          Already Have an account\r\n          <a href=\"/login\" className=\"ml-3\">\r\n            Login\r\n          </a>\r\n        </div>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n",["348","349"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\QuizComponent.js",[],["350","351"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\CreateQuiz.js",["352","353"],"import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../index.css\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport { postQuiz } from \"../actions/quizActions\";\r\nconst CreateQuiz = ({ history }) => {\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState();\r\n  const dispatch = useDispatch();\r\n  const quizCreate = useSelector((state) => state.quizCreate);\r\n  const { error, loading, quizInfo } = quizCreate;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  useEffect(() => {\r\n    if (quizInfo) history.push(`/create/${quizInfo.id}`);\r\n  }, [quizInfo]);\r\n\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name.length === 0) {\r\n      setMessage(\"Please Enter A valid Quiz name!!\");\r\n      return;\r\n    }\r\n    if (author.length === 0) {\r\n      setMessage(\"Please Enter A valid Author name!!\");\r\n      return;\r\n    }\r\n    if (description.length < 10) {\r\n      setMessage(\"Please Enter A Description of more than 10 characters!!\");\r\n      return;\r\n    }\r\n    dispatch(postQuiz(name, author, description));\r\n  };\r\n  return loading ? (\r\n    <Loaders></Loaders>\r\n  ) : error ? (\r\n    <Message variant=\"danger\">\r\n      Could not connect to server. Please try again later\r\n    </Message>\r\n  ) : (\r\n    <div className=\"login-form\">\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login \">\r\n          Create Your Quiz\r\n        </h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n\r\n        {loading && <Loaders />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Quiz Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Quiz Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"author\">\r\n            <Form.Label>Author</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Author Name\"\r\n              value={author}\r\n              onChange={(e) => setAuthor(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"description\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateQuiz;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\PostQuestions.js",["354","355","356","357"],"import React, { useState, useEffect } from \"react\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport { postQuestion, clearQuestion } from \"../actions/quizActions\";\r\n\r\nimport \"../index.css\";\r\n\r\nconst PostQuestions = ({ history }) => {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [correctOption, setCorrectOption] = useState(0);\r\n  const [options, setOptions] = useState([]);\r\n  const [option1, setOption1] = useState(\"\");\r\n  const [option2, setOption2] = useState(\"\");\r\n  const [option3, setOption3] = useState(\"\");\r\n  const [option4, setOption4] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [hint, setHint] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const questionCreate = useSelector((state) => state.questionCreate);\r\n  const { error, loading, questionInfo } = questionCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  useEffect(() => {\r\n    if (questionInfo) {\r\n      setQuestion(\"\");\r\n      setOption1(\"\");\r\n      setOption2(\"\");\r\n      setOption3(\"\");\r\n      setOption4(\"\");\r\n      setHint(\"\");\r\n      setCorrectOption(0);\r\n      dispatch(clearQuestion());\r\n    }\r\n  }, [questionInfo, clearQuestion]);\r\n\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      option1.length === 0 ||\r\n      option2.length === 0 ||\r\n      option3.length === 0 ||\r\n      option4.length === 0\r\n    ) {\r\n      setMessage(\"Options cannot be empty\");\r\n      return;\r\n    }\r\n    if (correctOption < 0 || correctOption >= 4) {\r\n      setMessage(\"Please enter a option between 0 to 3!\");\r\n      return;\r\n    }\r\n    const arr = [];\r\n    arr.length = 0;\r\n    arr.push(option1);\r\n    arr.push(option2);\r\n    arr.push(option3);\r\n    arr.push(option4);\r\n    dispatch(postQuestion(question, correctOption, arr, hint));\r\n  };\r\n  const quizCreated = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"login-form\">\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login add-question\">\r\n          Add Question\r\n        </h1>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && (\r\n          <Message variant=\"danger\">\r\n            Could not post questions. Please try again later\r\n          </Message>\r\n        )}\r\n        {loading && <Loaders />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"question\" className=\"question-container\">\r\n            <Form.Label className=\"question-label\">Question</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Question\"\r\n              value={question}\r\n              className=\"question-input\"\r\n              onChange={(e) => setQuestion(e.target.value)}\r\n              autocomplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"option1\" className=\"question-container\">\r\n            <Form.Label className=\"question-label\">Option1</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 1\"\r\n              value={option1}\r\n              onChange={(e) => setOption1(e.target.value)}\r\n              className=\"question-input\"\r\n              autocomplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"option2\" className=\"question-container\">\r\n            <Form.Label className=\"question-label\">Option2</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 2\"\r\n              value={option2}\r\n              onChange={(e) => setOption2(e.target.value)}\r\n              className=\"question-input\"\r\n              autocomplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"option3\" className=\"question-container\">\r\n            <Form.Label className=\"question-label\">Option3</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 3\"\r\n              value={option3}\r\n              onChange={(e) => setOption3(e.target.value)}\r\n              className=\"question-input\"\r\n              autocomplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"option1\" className=\"question-container\">\r\n            <Form.Label className=\"question-label\">Option4</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Option 4\"\r\n              value={option4}\r\n              onChange={(e) => setOption4(e.target.value)}\r\n              className=\"question-input\"\r\n              autocomplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"correctOption\" className=\"question-container\">\r\n            <Form.Label className=\"question-label\">Correct Option</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Enter Correct Option\"\r\n              value={correctOption}\r\n              onChange={(e) => setCorrectOption(e.target.value)}\r\n              className=\"question-input\"\r\n              autocomplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"hint\" className=\"question-container\">\r\n            <Form.Label className=\"question-label\">Hint text</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              type=\"name\"\r\n              placeholder=\"Enter Hint Text\"\r\n              value={hint}\r\n              onChange={(e) => setHint(e.target.value)}\r\n              className=\"question-input\"\r\n              autocomplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <div className=\"btn-container\">\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"mybutton submit-quiz-btn ml-auto mr-auto pl-4 pr-4\"\r\n              variant=\"info\"\r\n            >\r\n              Submit\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={quizCreated}\r\n              className=\"mybutton done-btn ml-auto mr-auto pl-4 pr-4\"\r\n              variant=\"info\"\r\n            >\r\n              I am done\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostQuestions;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\HomeScreen.js",["358"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport QuizComponent from \"../components/QuizComponent\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listQuiz } from \"../actions/quizActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\n\r\nimport EmptyScreen from \"../components/EmptyScreen\";\r\n\r\nimport \"../index.css\";\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const quizList = useSelector((state) => state.quizList);\r\n  const { loading, error, quiz } = quizList;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    dispatch(listQuiz());\r\n  }, [dispatch]);\r\n  return (\r\n    <div>\r\n      {userInfo ? (\r\n        <div>\r\n          <h1 className=\"quizzes-title\">Quizzes</h1>\r\n          {loading ? (\r\n            <Loaders></Loaders>\r\n          ) : error ? (\r\n            <Message variant=\"danger\">\r\n              Server Error. Please try again later\r\n            </Message>\r\n          ) : (\r\n            <div className=\"quiz-container\">\r\n              {quiz.map((ele) => (\r\n                <QuizComponent quizDetails={ele} key={ele._id}></QuizComponent>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <EmptyScreen />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n",["359","360"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\CheckList.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\MyQuizComponent.js",["361"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\LoginPage.js",["362","363","364","365","366","367"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Alert, Container } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { add } from \"../actions/My\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Loader } from \"semantic-ui-react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../index.css\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport { login } from \"../actions/userActions\";\r\nconst LoginPage = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, userInfo]);\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n    console.log(email);\r\n    console.log(password);\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <div className=\"login-form\">\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login \">LOG IN!</h1>\r\n        {error && (\r\n          <Message variant=\"danger\">\r\n            Server error. Please try again later\r\n          </Message>\r\n        )}\r\n        {loading && <Loader active inline=\"centered\" />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label> Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        <a href=\"#\" className=\"d-flex justify-content-end mt-2\">\r\n          Forgot Password\r\n        </a>\r\n        <div className=\"d-flex justify-content-center mt-4\">\r\n          Don't Have an account\r\n          <a href=\"/register\" className=\"ml-3\">\r\n            Register\r\n          </a>\r\n        </div>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n",["368","369"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\MyQuiz.js",["370","371"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MyQuizComponent from \"../components/MyQuizComponent\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { myListQuiz } from \"../actions/quizActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport \"../index.css\";\r\nimport { Alert } from \"react-bootstrap\";\r\nconst MyQuiz = () => {\r\n  const dispatch = useDispatch();\r\n  const myQuizList = useSelector((state) => state.myQuizList);\r\n  const { loading, error, myQuiz } = myQuizList;\r\n  useEffect(() => {\r\n    dispatch(myListQuiz());\r\n  }, [dispatch]);\r\n  // useEffect(() => {\r\n  //   Alert(\"State Changed\");\r\n  // }, [myQuiz]);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1 className=\"quizzes-title\">Quizzes</h1>\r\n        {loading ? (\r\n          <Loaders></Loaders>\r\n        ) : error ? (\r\n          <Message variant=\"danger\">\r\n            Server error. Please try again later\r\n          </Message>\r\n        ) : (\r\n          <div className=\"quiz-container\">\r\n            {myQuiz.map((ele) => (\r\n              <MyQuizComponent\r\n                quizDetails={ele}\r\n                key={ele._id}\r\n              ></MyQuizComponent>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      )\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyQuiz;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\quizActions.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\userActions.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\screens\\WelcomePage.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\actions\\My.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\reducers\\quizReducers.js",["372"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Question\\index.js",["373","374"],"import React, { useState } from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport { ChevronDoubleDown } from \"react-bootstrap-icons\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport \"../../App.css\";\r\nimport \"./question.css\";\r\n\r\nconst Question = ({\r\n  question,\r\n  score,\r\n  setScore,\r\n  indexNum,\r\n  checked,\r\n  setChecked,\r\n  setIndex,\r\n  clicked,\r\n  setClicked,\r\n  questionLength,\r\n  history,\r\n  setHaveFinished,\r\n}) => {\r\n  const setClickhandler = (index) => {\r\n    if (clicked[indexNum]) return;\r\n    setClicked(\r\n      clicked.map((item, ind) => {\r\n        return ind == indexNum ? true : item;\r\n      })\r\n    );\r\n    if (index === question.correctOption) {\r\n      setChecked(\r\n        checked.map((item, ind) => {\r\n          return ind === indexNum ? 1 : item;\r\n        })\r\n      );\r\n      setScore(score + 1);\r\n    } else {\r\n      setChecked(\r\n        checked.map((item, index) => {\r\n          return index === indexNum ? 2 : item;\r\n        })\r\n      );\r\n    }\r\n  };\r\n  function setFinished() {\r\n    setHaveFinished(true);\r\n  }\r\n\r\n  const Modal = () => (\r\n    <Popup\r\n      trigger={<div className=\"prev link result-button\">End quiz</div>}\r\n      modal\r\n    >\r\n      {(close) => (\r\n        <div className=\"asdas\">\r\n          <h2 style={{ textAlign: \"center\", marginTop: \"20px\" }}>End Quiz</h2>\r\n          <div style={{ textAlign: \"center\", marginTop: \"30px\" }}>\r\n            Are you sure want to complete the Quiz ?\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              marginTop: \"20px\",\r\n              padding: \"5px 40px\",\r\n            }}\r\n          >\r\n            <div\r\n              onClick={setFinished}\r\n              style={{ fontWeight: \"bold\", cursor: \"pointer\" }}\r\n            >\r\n              YES\r\n            </div>\r\n            <div\r\n              onClick={close}\r\n              style={{ fontWeight: \"bold\", cursor: \"pointer\" }}\r\n            >\r\n              NO\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n\r\n  return (\r\n    <div className=\"question\">\r\n      <div className=\"question-title\">{question.question}</div>\r\n      <div>\r\n        {question.options.map((option, index) => {\r\n          return (\r\n            <button\r\n              onClick={() => setClickhandler(index)}\r\n              className={\r\n                clicked[indexNum] && question.correctOption === index\r\n                  ? \"green option\"\r\n                  : clicked[indexNum]\r\n                  ? \"red option\"\r\n                  : \"option\"\r\n              }\r\n            >\r\n              {option}\r\n            </button>\r\n          );\r\n        })}\r\n        {question?.hint?.length > 0 && (\r\n          <div className=\"accordion-content\">\r\n            <Accordion defaultActiveKey=\"0\">\r\n              <Accordion.Item eventKey=\"1\">\r\n                <Accordion.Header>\r\n                  <div className=\"accordion-title\">\r\n                    Show Hint <ChevronDoubleDown size={15} color=\"green\" />\r\n                  </div>\r\n                </Accordion.Header>\r\n                <Accordion.Body className=\"accordion-hint\">\r\n                  {question.hint}\r\n                </Accordion.Body>\r\n              </Accordion.Item>\r\n            </Accordion>\r\n          </div>\r\n        )}\r\n\r\n        <div class=\"buttons\">\r\n          {indexNum === 0 ? (\r\n            <div></div>\r\n          ) : (\r\n            <div onClick={() => setIndex(indexNum - 1)} className=\"prev\">\r\n              prev\r\n            </div>\r\n          )}\r\n          {indexNum === questionLength - 1 ? (\r\n            <Modal />\r\n          ) : (\r\n            <div onClick={() => setIndex(indexNum + 1)} className=\"prev\">\r\n              next\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\constants\\userConstants.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\store.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\constants\\quizConstants.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\App.js",["375"],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Header.js",["376","377","378","379","380"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Button,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nimport \"../App.css\";\r\n\r\nconst Header = () => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const dispatch = useDispatch();\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <div className=\"header-container\">\r\n      {userInfo ? (\r\n        <div>\r\n          <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"/\">QuizMaker</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"ml-auto\">\r\n                <Nav.Link href=\"/\">Home</Nav.Link>\r\n                {/* <Nav.Link href=\"/profile\">Profile</Nav.Link> */}\r\n                <Nav.Link href=\"/create\">Create</Nav.Link>\r\n                <Nav.Link href=\"/myquiz\">My Quizzes</Nav.Link>\r\n                <Nav.Link onClick={logoutHandler}>Logout</Nav.Link>\r\n              </Nav>\r\n              {/* <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-success\">Search</Button>\r\n          </Form> */}\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">QuizMaker</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"ml-auto\">\r\n                <Nav.Link href=\"/login\">Login</Nav.Link>\r\n                <Nav.Link href=\"/register\">Register</Nav.Link>\r\n              </Nav>\r\n              {/* <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n            <Button variant=\"outline-success\">Search</Button>\r\n          </Form> */}\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Result.js",[],"D:\\React Codes\\quizmakerashu\\quizmaker\\src\\components\\Footer\\index.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\index.js",[],["381","382"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\reducers\\userReducers.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\WelcomePage.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\constants\\quizConstants.js",[],["383","384"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\QuizComponent.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\Check.js",[],["385","386"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\actions\\quizActions.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\LoginPage.js",["387","388","389","390","391","392"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Alert, Container } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { add } from \"../actions/My\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Loader } from \"semantic-ui-react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../index.css\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\nimport { login } from \"../actions/userActions\";\r\nconst LoginPage = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, userInfo]);\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <div className=\"login-form\">\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login \">LOG IN!</h1>\r\n        {error && (\r\n          <Message variant=\"danger\">\r\n            Server error. Please try again later\r\n          </Message>\r\n        )}\r\n        {loading && <Loader active inline=\"centered\" />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label> Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        <a href=\"#\" className=\"d-flex justify-content-end mt-2\">\r\n          Forgot Password\r\n        </a>\r\n        <div className=\"d-flex justify-content-center mt-4\">\r\n          Don't Have an account\r\n          <a href=\"/register\" className=\"ml-3\">\r\n            Register\r\n          </a>\r\n        </div>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n",["393","394"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\CreateQuiz.js",["395","396"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"../components/Loaders\";\r\n\r\nimport { postQuiz } from \"../actions/quizActions\";\r\n\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nimport \"../index.css\";\r\nimport { Checkbox } from \"@chakra-ui/checkbox\";\r\n\r\nconst CreateQuiz = ({ history }) => {\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [isPrivate, setIsPrivate] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const dispatch = useDispatch();\r\n  const quizCreate = useSelector((state) => state.quizCreate);\r\n  const { error, loading, quizInfo } = quizCreate;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n  useEffect(() => {\r\n    if (quizInfo) history.push(`/create/${quizInfo.id}`);\r\n  }, [quizInfo]);\r\n\r\n  const submitform = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name.length === 0) {\r\n      setMessage(\"Please Enter A valid Quiz name!!\");\r\n      return;\r\n    }\r\n    if (author.length === 0) {\r\n      setMessage(\"Please Enter A valid Author name!!\");\r\n      return;\r\n    }\r\n    if (description.length < 10) {\r\n      setMessage(\"Please Enter A Description of more than 10 characters!!\");\r\n      return;\r\n    }\r\n    dispatch(postQuiz(name, author, description, isPrivate));\r\n  };\r\n  return loading ? (\r\n    <Loaders></Loaders>\r\n  ) : error ? (\r\n    <Message variant=\"danger\">\r\n      Could not connect to server. Please try again later\r\n    </Message>\r\n  ) : (\r\n    <div className=\"login-form\">\r\n      <FormContainer>\r\n        <h1 className=\"d-flex justify-content-center login \">\r\n          Create Your Quiz\r\n        </h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n\r\n        {loading && <Loaders />}\r\n        <Form onSubmit={submitform} className=\"d-flex flex-column\">\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Quiz Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Quiz Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              autoComplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"author\">\r\n            <Form.Label>Author</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Author Name\"\r\n              value={author}\r\n              onChange={(e) => setAuthor(e.target.value)}\r\n              autoComplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"description\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              autoComplete=\"off\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <div style={{ display: \"flex\", marginBottom: \"20px\" }}>\r\n            <div className=\"privateQuiz\" style={{ marginRight: \"30px\" }}>\r\n              Do you want to make the quiz Private?\r\n            </div>\r\n            <Checkbox\r\n              checked={isPrivate}\r\n              onChange={(e) => setIsPrivate(e.target.checked)}\r\n            >\r\n              Yes\r\n            </Checkbox>\r\n          </div>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"mybutton ml-auto mr-auto pl-4 pr-4\"\r\n            variant=\"info\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateQuiz;\r\n","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\Question\\index.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\QuestionList.js",["397","398"],"import React, { useState, useEffect } from \"react\";\r\nimport CheckList from \"./CheckList\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../App.css\";\r\nimport Question from \"./Question\";\r\nimport Message from \"../components/Message\";\r\nimport Loaders from \"./Loaders\";\r\nimport NoQuestion from \"../components/NoQuestion\";\r\n\r\nimport { listQuestions } from \"../actions/quizActions\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nconst QuestionList = ({ id, history }) => {\r\n  const [questionLength, setQuestionLength] = useState(-1);\r\n  const [index, setIndex] = useState(0);\r\n  const questionList = useSelector((state) => state.questionList);\r\n  const { loading, error, questions } = questionList;\r\n  const [clicked, setClicked] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const [answers, setAnswers] = useState([]);\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const [haveFinished, setHaveFinished] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userInfo]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listQuestions(id));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (questions) {\r\n      setQuestionLength(questions.length);\r\n      setClicked(new Array(questions.length).fill(0));\r\n      setAnswers(new Array(questions.length).fill({}));\r\n    }\r\n  }, [questions]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loaders></Loaders>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">Please try again later</Message>\r\n      ) : haveFinished ? (\r\n        <div className=\"score\">\r\n          <Box>Your response has been successfully submitted</Box>\r\n          <a href=\"/\" className=\"link2Home\">\r\n            Play Another Quiz\r\n          </a>\r\n        </div>\r\n      ) : questionLength > 0 ? (\r\n        <div className=\"quizList\">\r\n          <div className=\"question-number\">Question No. {index + 1}</div>\r\n          <div className=\"quiz-content\">\r\n            <Question\r\n              question={questions[index]}\r\n              indexNum={index}\r\n              setIndex={setIndex}\r\n              clicked={clicked}\r\n              setClicked={setClicked}\r\n              questionLength={questionLength}\r\n              setAnswers={setAnswers}\r\n              answers={answers}\r\n              id={id}\r\n              setHaveFinished={setHaveFinished}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"quiz-details\">\r\n            <div style={{ height: \"calc(100vh - 120px)\" }}>\r\n              <CheckList clicked={clicked} setIndex={setIndex} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <NoQuestion />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionList;\r\n","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\CheckList.js",[],["399","400"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\Header.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\reportWebVitals.js",[],["401","402"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\EmptyScreen\\index.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\QuizPage.js",["403","404"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\RegisterPage.js",["405"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\NoQuestion\\index.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\PostQuestions.js",["406","407","408","409"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\MyQuiz.js",["410","411"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\MyQuizComponent.js",["412","413"],"import React, { useRef, useLayoutEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@chakra-ui/react\";\r\n\r\nimport \"../index.css\";\r\n\r\nimport { deleteMyQuiz, myListQuiz } from \"../actions/quizActions\";\r\nimport { Loader } from \"semantic-ui-react\";\r\n\r\nconst MyQuizComponent = ({ quizDetails }) => {\r\n  const colorClass = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\"];\r\n  const index = Math.floor(Math.random() * colorClass.length);\r\n  const chosen = colorClass[index];\r\n  const d = Date(quizDetails.createdAt).split(\" \");\r\n  const D = d[0] + \" \" + d[1] + \" \" + d[2] + \" \" + d[3];\r\n  const dispatch = useDispatch();\r\n  const deleteQuiz = useSelector((state) => state.deleteQuiz);\r\n\r\n  const history = useHistory();\r\n\r\n  const { loading, success } = deleteQuiz;\r\n  const firstUpadte = useRef(true);\r\n\r\n  useLayoutEffect(() => {\r\n    if (firstUpadte.current) {\r\n      firstUpadte.current = false;\r\n      return;\r\n    }\r\n    if (success) {\r\n      dispatch(myListQuiz());\r\n    }\r\n  }, [success]);\r\n  const deleteHandler = () => {\r\n    dispatch(deleteMyQuiz(quizDetails._id));\r\n  };\r\n\r\n  const onViewButtonClick = () => {\r\n    history.push({\r\n      pathname: `/quiz/details/${quizDetails._id}`,\r\n      state: quizDetails,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading && <Loader />}\r\n      <div className={chosen}>\r\n        <div className=\"quiz\">\r\n          <div className=\"quiz-title\">{quizDetails.name}</div>\r\n          <div className=\"quiz-description\">{quizDetails.description}</div>\r\n          <div className=\"quiz-footer\">\r\n            <div>Author</div>\r\n            <div>{quizDetails.author}</div>\r\n          </div>\r\n          <Link to={`quiz/${quizDetails._id}`} className=\"link quiz-btn\">\r\n            Play Now\r\n          </Link>\r\n          <div className=\"deleteQuiz\" onClick={deleteHandler}>\r\n            Delete\r\n          </div>\r\n          <Button onClick={onViewButtonClick} colorScheme=\"teal\">\r\n            View\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyQuizComponent;\r\n","D:\\React Codes\\QuizMaker\\quizmaker\\src\\actions\\userActions.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\reducers\\quizResponseReducers.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\store.js",[],["414","415"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\actions\\quizResponseActions.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\App.js",[],["416","417"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\HomeScreen.js",["418"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\QuizDetailsPage\\index.js",["419","420","421","422","423","424","425","426","427","428"],"import { Box, Divider, Flex } from \"@chakra-ui/layout\";\r\nimport { Button, useToast } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nimport NoAccessPage from \"../../components/NoAccessPage\";\r\n\r\nimport { deleteMyQuiz, generateReport } from \"../../actions/quizActions\";\r\n\r\nimport \"./quizDetailsPage.css\";\r\nimport { useEffect } from \"react\";\r\nimport ResponsePdf from \"../../components/ResponsePdf/ResponsePdf\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\nimport { ConeStriped } from \"react-bootstrap-icons\";\r\nimport axios from \"axios\";\r\nimport QuestionDetails from \"../../components/QuestionDetails\";\r\nimport AddQuestion from \"../../components/AddQuestion\";\r\nimport TimePicker from \"../../components/TimePicker\";\r\n\r\nfunction QuizDetailsPage() {\r\n  const userInfo = localStorage.getItem(\"userInfo\");\r\n\r\n  const location = useLocation();\r\n  const quizDetails = location?.state;\r\n\r\n  const [subjectName, setSubjectName] = useState();\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const isValidUser = userInfo?.id === quizDetails?.user;\r\n\r\n  const deleteQuiz = useSelector((state) => state.deleteQuiz);\r\n\r\n  const report = useSelector((state) => state?.quizReport?.report?.report);\r\n\r\n  const { success } = deleteQuiz;\r\n\r\n  const [quizResponseData, setQuizResponseData] = useState();\r\n  const userData = JSON.parse(userInfo);\r\n\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    dispatch(generateReport(quizDetails?._id));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.replace({\r\n        pathname: \"/\",\r\n        state: {\r\n          deleted: true,\r\n        },\r\n      });\r\n    }\r\n  }, [success]);\r\n\r\n  if (isValidUser) {\r\n    return (\r\n      <>\r\n        <NoAccessPage />\r\n      </>\r\n    );\r\n  }\r\n\r\n  const deleteHandler = () => {\r\n    dispatch(deleteMyQuiz(quizDetails?._id));\r\n  };\r\n\r\n  const sendMails = async () => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userData.token}`,\r\n      },\r\n    };\r\n\r\n    const data = await axios.get(`/api/quiz/send/${quizDetails._id}`, config);\r\n\r\n    if (data?.data?.success) {\r\n      toast({\r\n        title: \"Mail is succesfully sent to everyone\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      toast({\r\n        title: \"Please try again after sometime\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onPriveteClick = async (isPrivate) => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userData.token}`,\r\n      },\r\n    };\r\n\r\n    const data = await axios.post(\r\n      `/api/quiz/update/${quizDetails._id}`,\r\n      { isPrivate },\r\n      config\r\n    );\r\n  };\r\n\r\n  if (!report) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <Box m=\"16\" id=\"box\">\r\n      <Box mt={8} mb={4}>\r\n        <PDFDownloadLink\r\n          document={\r\n            <ResponsePdf report={report} subjectName={quizDetails.name} />\r\n          }\r\n          fileName=\"response.pdf\"\r\n        >\r\n          {({ blob, url, loading, error }) => {\r\n            return loading ? (\r\n              \"Loading\"\r\n            ) : (\r\n              <Button>Download the test result</Button>\r\n            );\r\n          }}\r\n        </PDFDownloadLink>\r\n      </Box>\r\n\r\n      <Divider mb={2} />\r\n\r\n      <Button\r\n        onClick={sendMails}\r\n        className=\"sendMail\"\r\n        colorScheme=\"telegram\"\r\n        mb={4}\r\n      >\r\n        Send Mails to Everyone for the test\r\n      </Button>\r\n\r\n      <Divider mb={8} />\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <h2>Make the quiz private</h2>\r\n        <Button my={6} onClick={() => onPriveteClick(true)}>\r\n          Yes\r\n        </Button>\r\n        <Button my={6} mx={8} onClick={() => onPriveteClick(false)}>\r\n          No\r\n        </Button>\r\n      </div>\r\n\r\n      <Divider my={3} />\r\n      <Box mt={4}>\r\n        <QuestionDetails id={quizDetails._id} token={userData.token} />\r\n      </Box>\r\n\r\n      <Box mx={4}>\r\n        <AddQuestion\r\n          id={quizDetails._id}\r\n          token={userData.token}\r\n          userId={userData?._id}\r\n        />\r\n      </Box>\r\n      <Box mx={4}>\r\n        <TimePicker\r\n          id={quizDetails._id}\r\n          token={userData.token}\r\n          userId={userData?._id}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default QuizDetailsPage;\r\n","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\NoAccessPage\\index.js",[],["429","430"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\Message.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\reducers\\quizReducers.js",["431"],"import {\r\n  QUESTION_LIST_REQUEST,\r\n  QUESTION_LIST_FAIL,\r\n  QUESTION_LIST_SUCCESS,\r\n  QUIZ_LIST_FAIL,\r\n  QUIZ_LIST_REQUEST,\r\n  QUIZ_LIST_SUCCESS,\r\n  QUIZ_CREATE_FAIL,\r\n  QUIZ_CREATE_REQUEST,\r\n  QUIZ_CREATE_SUCCESS,\r\n  QUESTION_CREATE_FAIL,\r\n  QUESTION_CREATE_REQUEST,\r\n  QUESTION_CREATE_SUCCESS,\r\n  QUESTION_CLEAR,\r\n  MYQUIZ_LIST_FAIL,\r\n  MYQUIZ_LIST_REQUEST,\r\n  MYQUIZ_LIST_SUCCESS,\r\n  QUIZ_DELETE_FAIL,\r\n  QUIZ_DELETE_REQUEST,\r\n  QUIZ_DELETE_SUCCESS,\r\n  GENERATE_REPORT_FAIL,\r\n  GENERATE_REPORT_REQUEST,\r\n  GENERATE_REPORT_SUCCESS,\r\n} from \"../constants/quizConstants\";\r\n\r\nexport const quizListReducer = (state = { quiz: [] }, action) => {\r\n  switch (action.type) {\r\n    case QUIZ_LIST_REQUEST:\r\n      return { loading: true, quiz: [] };\r\n    case QUIZ_LIST_SUCCESS:\r\n      return { loading: false, quiz: action.payload.data };\r\n    case QUIZ_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const MyQuizListReducer = (state = { myQuiz: [] }, action) => {\r\n  switch (action.type) {\r\n    case MYQUIZ_LIST_REQUEST:\r\n      return { loading: true, myQuiz: [] };\r\n    case MYQUIZ_LIST_SUCCESS:\r\n      return { loading: false, myQuiz: action.payload.data };\r\n    case MYQUIZ_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const questionListReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case QUESTION_LIST_REQUEST:\r\n      return { loading: true, questions: [] };\r\n    case QUESTION_LIST_SUCCESS:\r\n      return { loading: false, questions: action.payload.data };\r\n    case QUESTION_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const quizCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case QUIZ_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case QUIZ_CREATE_SUCCESS:\r\n      return { loading: false, quizInfo: action.payload.data };\r\n    case QUIZ_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const questionCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case QUESTION_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case QUESTION_CREATE_SUCCESS:\r\n      return { loading: false, questionInfo: action.payload.data };\r\n    case QUESTION_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case QUESTION_CLEAR:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const quizDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case QUIZ_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case QUIZ_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case QUIZ_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const generateQuizListReducer = (state = { report: [] }, action) => {\r\n  switch (action.type) {\r\n    case GENERATE_REPORT_REQUEST:\r\n      return { loading: true, report: [] };\r\n    case GENERATE_REPORT_SUCCESS:\r\n      return { loading: false, report: action.payload.data };\r\n    case GENERATE_REPORT_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\ResponsePdf\\ResponsePdf.js",["432","433"],"import React from \"react\";\r\n\r\nimport {\r\n  Page,\r\n  View,\r\n  Document,\r\n  PDFViewer,\r\n  Text,\r\n  StyleSheet,\r\n  Image,\r\n} from \"@react-pdf/renderer\";\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    padding: 10,\r\n  },\r\n  table: {\r\n    display: \"table\",\r\n    width: \"auto\",\r\n    padding: 20,\r\n    borderStyle: \"solid\",\r\n    borderColor: \"#bfbfbf\",\r\n    borderWidth: 0.5,\r\n    borderRadius: 10,\r\n    borderRightWidth: 0,\r\n    borderBottomWidth: 0,\r\n  },\r\n  tableRow: {\r\n    margin: \"auto\",\r\n    flexDirection: \"row\",\r\n  },\r\n  tableColHeader: {\r\n    width: \"25%\",\r\n    borderStyle: \"solid\",\r\n    borderColor: \"#bfbfbf\",\r\n    borderBottomColor: \"#000\",\r\n    borderWidth: 1,\r\n    borderLeftWidth: 0,\r\n    borderTopWidth: 0,\r\n  },\r\n  tableCol: {\r\n    width: \"25%\",\r\n    borderStyle: \"solid\",\r\n    borderColor: \"#bfbfbf\",\r\n    borderWidth: 1,\r\n    borderLeftWidth: 0,\r\n    borderTopWidth: 0,\r\n  },\r\n  tableCellHeader: {\r\n    margin: 5,\r\n    fontSize: 12,\r\n    fontWeight: 500,\r\n  },\r\n  tableCell: {\r\n    margin: 5,\r\n    fontSize: 10,\r\n  },\r\n  heading: {\r\n    textAlign: \"center\",\r\n    width: \"100%\",\r\n    fontSize: 18,\r\n    marginBottom: 20,\r\n  },\r\n  image: {\r\n    height: 100,\r\n    width: 100,\r\n  },\r\n  subjectName: {\r\n    fontSize: 14,\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nconst ResponsePdf = (props) => {\r\n  const { subjectName } = props;\r\n\r\n  return (\r\n    <Document>\r\n      <Page style={styles.body}>\r\n        <View>\r\n          <View style={styles.heading}>\r\n            <Text>NATIONAL INSTITUTE OF TECHNOLOGY</Text>\r\n          </View>\r\n          <View style={styles.heading}>\r\n            <Text>JAMSHEDPUR - 831014, JHARKHAND</Text>\r\n          </View>\r\n\r\n          <View style={styles.heading}>\r\n            <Text style={styles.subjectName}>Marks of {subjectName}</Text>\r\n          </View>\r\n\r\n          <View style={styles.table}>\r\n            <View style={styles.tableRow}>\r\n              <View style={styles.tableColHeader}>\r\n                <Text style={styles.tableCellHeader}>Name</Text>\r\n              </View>\r\n              <View style={styles.tableColHeader}>\r\n                <Text style={styles.tableCellHeader}>Roll Number</Text>\r\n              </View>\r\n              <View style={styles.tableColHeader}>\r\n                <Text style={styles.tableCellHeader}>Total Marks</Text>\r\n              </View>\r\n              <View style={styles.tableColHeader}>\r\n                <Text style={styles.tableCellHeader}>Marks</Text>\r\n              </View>\r\n            </View>\r\n\r\n            {props?.report?.map((val) => {\r\n              return (\r\n                <View style={styles.tableRow}>\r\n                  <View style={styles.tableCol}>\r\n                    <Text style={styles.tableCell}>{val[\"name\"]}</Text>\r\n                  </View>\r\n                  <View style={styles.tableCol}>\r\n                    <Text style={styles.tableCell}>{val[\"rollNumber\"]}</Text>\r\n                  </View>\r\n                  <View style={styles.tableCol}>\r\n                    <Text style={styles.tableCell}>{val[\"totalCorrect\"]}</Text>\r\n                  </View>\r\n                  <View style={styles.tableCol}>\r\n                    <Text style={styles.tableCell}>{val[\"totalMarks\"]}</Text>\r\n                  </View>\r\n                </View>\r\n              );\r\n            })}\r\n          </View>\r\n        </View>\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\n// const ResponseTable = () => {\r\n//   return (\r\n//     <Table variant=\"simple\">\r\n//       <Thead>\r\n//         <Tr>\r\n//           <Th>Name</Th>\r\n//           <Th>Roll No</Th>\r\n//           <Th isNumeric>Marks</Th>\r\n//           <Th>Total Marks</Th>\r\n//         </Tr>\r\n//       </Thead>\r\n//       <Tbody>\r\n//         {data?.map((val) => {\r\n//           return (\r\n//             <Tr key={val[\"Roll Number\"]}>\r\n//               <Td>{val[\"Name\"]}</Td>\r\n//               <Td>{val[\"Roll Number\"]}</Td>\r\n//               <Td isNumeric>{val[\"Marks\"]}</Td>\r\n//               <Td>{val[\"Total Marks\"]}</Td>\r\n//             </Tr>\r\n//           );\r\n//         })}\r\n//       </Tbody>\r\n//     </Table>\r\n//   );\r\n// };\r\n\r\nexport default React.memo(ResponsePdf);\r\n",["434","435"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\actions\\My.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\FileUploadPage.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\screens\\NotFound.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\constants\\userConstants.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\Result.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\QuestionDetails\\index.js",["436"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\UpdateQuestion\\index.js",["437"],"import { Button } from \"@chakra-ui/button\";\r\nimport { Input, InputGroup, InputLeftAddon } from \"@chakra-ui/input\";\r\nimport { Flex, Stack } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./updateQuestion.css\";\r\n\r\nfunction UpdateQuestion(props) {\r\n  const { question, index, token } = props;\r\n\r\n  const [questionName, setQuestionName] = useState(question.question);\r\n  const [option1, setOption1] = useState(question.options[0]);\r\n  const [option2, setOption2] = useState(question.options[1]);\r\n  const [option3, setOption3] = useState(question.options[2]);\r\n  const [option4, setOption4] = useState(question.options[3]);\r\n  const [hint, setHint] = useState(question.hint);\r\n  const [correctOption, setCorrectOption] = useState(question.correctOption);\r\n  const [error, setError] = useState();\r\n\r\n  const toast = useToast();\r\n\r\n  const updateQuestion = async () => {\r\n    if (correctOption < 0 || correctOption > 3) {\r\n      setError(\"Correct Option should be between 0 and 3\");\r\n      return;\r\n    }\r\n    if (questionName?.length === 0) {\r\n      setError(\"Question Name cannot be empty!\");\r\n      return;\r\n    }\r\n    if (\r\n      option1.length === 0 ||\r\n      option2.length === 0 ||\r\n      option3.length === 0 ||\r\n      option4.length === 0\r\n    ) {\r\n      setError(\"Options cannot be empty!\");\r\n      return;\r\n    }\r\n    const arr = [];\r\n    arr.length = 0;\r\n    arr.push(option1);\r\n    arr.push(option2);\r\n    arr.push(option3);\r\n    arr.push(option4);\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const data = await axios.post(\r\n      `/api/question/update/${question?._id}`,\r\n      {\r\n        question: questionName,\r\n        options: arr,\r\n        correctOption: Number(correctOption),\r\n        user: question.user,\r\n        quizName: question.quizName,\r\n        hint: hint,\r\n      },\r\n      config\r\n    );\r\n    if (data?.data?.success) {\r\n      toast({\r\n        title: \"Question is updated successfully\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      toast({\r\n        title: \"Please try again after sometime\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteQuestion = async () => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const data = await axios.get(\r\n      `/api/question/delete/${question?._id}`,\r\n      config\r\n    );\r\n\r\n    if (data?.data?.success) {\r\n      toast({\r\n        title: \"Question is Deleted successfully\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      toast({\r\n        title: \"Please try again after sometime\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {error?.length && (\r\n        <div style={{ fontSize: \"12px\", color: \"red\" }}>{error}</div>\r\n      )}\r\n      <Stack spacing={2} my={4}>\r\n        <InputGroup>\r\n          <InputLeftAddon children=\"Question\" />\r\n          <Input\r\n            value={questionName}\r\n            onChange={(e) => setQuestionName(e.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputLeftAddon children=\"Option 1\" />\r\n          <Input value={option1} onChange={(e) => setOption1(e.target.value)} />\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputLeftAddon children=\"Option 2\" />\r\n          <Input value={option2} onChange={(e) => setOption2(e.target.value)} />\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputLeftAddon children=\"Option 3\" />\r\n          <Input value={option3} onChange={(e) => setOption3(e.target.value)} />\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputLeftAddon children=\"Option 4\" />\r\n          <Input value={option4} onChange={(e) => setOption4(e.target.value)} />\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputLeftAddon children=\"Correct Option\" />\r\n          <Input\r\n            type=\"number\"\r\n            min={0}\r\n            max={3}\r\n            value={correctOption}\r\n            onChange={(e) => setCorrectOption(e.target.value)}\r\n          />\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputLeftAddon children=\"Hint\" />\r\n          <Input value={hint} onChange={(e) => setHint(e.target.value)} />\r\n        </InputGroup>\r\n        <Flex>\r\n          <Button\r\n            onClick={updateQuestion}\r\n            colorScheme=\"teal\"\r\n            isFullWidth\r\n            mr={2}\r\n          >\r\n            Update\r\n          </Button>\r\n          <Button onClick={deleteQuestion} colorScheme=\"red\" isFullWidth ml={2}>\r\n            Delete\r\n          </Button>\r\n        </Flex>\r\n      </Stack>\r\n    </div>\r\n  );\r\n}\r\nexport default UpdateQuestion;\r\n","D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\AddQuestion.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\TimePicker.js",["438"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\FormContainer.js",[],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\components\\Loaders.js",["439"],"D:\\React Codes\\QuizMaker\\quizmaker\\src\\constants\\quizResponseConstants.js",[],{"ruleId":"440","replacedBy":"441"},{"ruleId":"442","replacedBy":"443"},{"ruleId":"440","replacedBy":"444"},{"ruleId":"442","replacedBy":"445"},{"ruleId":"440","replacedBy":"446"},{"ruleId":"442","replacedBy":"447"},{"ruleId":"448","severity":1,"message":"449","line":3,"column":26,"nodeType":"450","messageId":"451","endLine":3,"endColumn":31},{"ruleId":"452","severity":1,"message":"453","line":28,"column":6,"nodeType":"454","endLine":28,"endColumn":16,"suggestions":"455"},{"ruleId":"452","severity":1,"message":"456","line":31,"column":6,"nodeType":"454","endLine":31,"endColumn":8,"suggestions":"457"},{"ruleId":"452","severity":1,"message":"453","line":11,"column":6,"nodeType":"454","endLine":11,"endColumn":16,"suggestions":"458"},{"ruleId":"452","severity":1,"message":"459","line":26,"column":6,"nodeType":"454","endLine":26,"endColumn":16,"suggestions":"460"},{"ruleId":"440","replacedBy":"461"},{"ruleId":"442","replacedBy":"462"},{"ruleId":"440","replacedBy":"463"},{"ruleId":"442","replacedBy":"464"},{"ruleId":"452","severity":1,"message":"453","line":23,"column":6,"nodeType":"454","endLine":23,"endColumn":16,"suggestions":"465"},{"ruleId":"452","severity":1,"message":"453","line":26,"column":6,"nodeType":"454","endLine":26,"endColumn":16,"suggestions":"466"},{"ruleId":"448","severity":1,"message":"467","line":14,"column":10,"nodeType":"450","messageId":"451","endLine":14,"endColumn":17},{"ruleId":"448","severity":1,"message":"468","line":14,"column":19,"nodeType":"450","messageId":"451","endLine":14,"endColumn":29},{"ruleId":"452","severity":1,"message":"453","line":31,"column":6,"nodeType":"454","endLine":31,"endColumn":16,"suggestions":"469"},{"ruleId":"452","severity":1,"message":"470","line":43,"column":6,"nodeType":"454","endLine":43,"endColumn":35,"suggestions":"471"},{"ruleId":"448","severity":1,"message":"472","line":2,"column":10,"nodeType":"450","messageId":"451","endLine":2,"endColumn":14},{"ruleId":"440","replacedBy":"473"},{"ruleId":"442","replacedBy":"474"},{"ruleId":"452","severity":1,"message":"475","line":30,"column":6,"nodeType":"454","endLine":30,"endColumn":15,"suggestions":"476"},{"ruleId":"448","severity":1,"message":"477","line":2,"column":10,"nodeType":"450","messageId":"451","endLine":2,"endColumn":14},{"ruleId":"448","severity":1,"message":"478","line":2,"column":16,"nodeType":"450","messageId":"451","endLine":2,"endColumn":21},{"ruleId":"448","severity":1,"message":"479","line":2,"column":23,"nodeType":"450","messageId":"451","endLine":2,"endColumn":32},{"ruleId":"448","severity":1,"message":"480","line":4,"column":10,"nodeType":"450","messageId":"451","endLine":4,"endColumn":13},{"ruleId":"448","severity":1,"message":"481","line":11,"column":8,"nodeType":"450","messageId":"451","endLine":11,"endColumn":15},{"ruleId":"482","severity":1,"message":"483","line":67,"column":9,"nodeType":"484","endLine":67,"endColumn":65},{"ruleId":"440","replacedBy":"485"},{"ruleId":"442","replacedBy":"486"},{"ruleId":"448","severity":1,"message":"472","line":2,"column":10,"nodeType":"450","messageId":"451","endLine":2,"endColumn":14},{"ruleId":"448","severity":1,"message":"478","line":9,"column":10,"nodeType":"450","messageId":"451","endLine":9,"endColumn":15},{"ruleId":"448","severity":1,"message":"487","line":18,"column":3,"nodeType":"450","messageId":"451","endLine":18,"endColumn":19},{"ruleId":"448","severity":1,"message":"488","line":1,"column":17,"nodeType":"450","messageId":"451","endLine":1,"endColumn":25},{"ruleId":"489","severity":1,"message":"490","line":27,"column":20,"nodeType":"491","messageId":"492","endLine":27,"endColumn":22},{"ruleId":"448","severity":1,"message":"493","line":7,"column":8,"nodeType":"450","messageId":"451","endLine":7,"endColumn":19},{"ruleId":"448","severity":1,"message":"494","line":1,"column":17,"nodeType":"450","messageId":"451","endLine":1,"endColumn":26},{"ruleId":"448","severity":1,"message":"495","line":4,"column":3,"nodeType":"450","messageId":"451","endLine":4,"endColumn":9},{"ruleId":"448","severity":1,"message":"496","line":6,"column":3,"nodeType":"450","messageId":"451","endLine":6,"endColumn":14},{"ruleId":"448","severity":1,"message":"497","line":7,"column":3,"nodeType":"450","messageId":"451","endLine":7,"endColumn":7},{"ruleId":"448","severity":1,"message":"498","line":8,"column":3,"nodeType":"450","messageId":"451","endLine":8,"endColumn":14},{"ruleId":"440","replacedBy":"499"},{"ruleId":"442","replacedBy":"500"},{"ruleId":"440","replacedBy":"501"},{"ruleId":"442","replacedBy":"502"},{"ruleId":"440","replacedBy":"503"},{"ruleId":"442","replacedBy":"504"},{"ruleId":"448","severity":1,"message":"477","line":2,"column":10,"nodeType":"450","messageId":"451","endLine":2,"endColumn":14},{"ruleId":"448","severity":1,"message":"478","line":2,"column":16,"nodeType":"450","messageId":"451","endLine":2,"endColumn":21},{"ruleId":"448","severity":1,"message":"479","line":2,"column":23,"nodeType":"450","messageId":"451","endLine":2,"endColumn":32},{"ruleId":"448","severity":1,"message":"480","line":4,"column":10,"nodeType":"450","messageId":"451","endLine":4,"endColumn":13},{"ruleId":"448","severity":1,"message":"481","line":11,"column":8,"nodeType":"450","messageId":"451","endLine":11,"endColumn":15},{"ruleId":"482","severity":1,"message":"483","line":66,"column":9,"nodeType":"484","endLine":66,"endColumn":65},{"ruleId":"440","replacedBy":"505"},{"ruleId":"442","replacedBy":"506"},{"ruleId":"452","severity":1,"message":"453","line":31,"column":6,"nodeType":"454","endLine":31,"endColumn":16,"suggestions":"507"},{"ruleId":"452","severity":1,"message":"453","line":34,"column":6,"nodeType":"454","endLine":34,"endColumn":16,"suggestions":"508"},{"ruleId":"452","severity":1,"message":"453","line":28,"column":6,"nodeType":"454","endLine":28,"endColumn":16,"suggestions":"509"},{"ruleId":"452","severity":1,"message":"456","line":32,"column":6,"nodeType":"454","endLine":32,"endColumn":8,"suggestions":"510"},{"ruleId":"440","replacedBy":"511"},{"ruleId":"442","replacedBy":"512"},{"ruleId":"440","replacedBy":"513"},{"ruleId":"442","replacedBy":"514"},{"ruleId":"448","severity":1,"message":"515","line":7,"column":10,"nodeType":"450","messageId":"451","endLine":7,"endColumn":13},{"ruleId":"452","severity":1,"message":"516","line":38,"column":6,"nodeType":"454","endLine":38,"endColumn":16,"suggestions":"517"},{"ruleId":"452","severity":1,"message":"459","line":26,"column":6,"nodeType":"454","endLine":26,"endColumn":16,"suggestions":"518"},{"ruleId":"448","severity":1,"message":"467","line":14,"column":10,"nodeType":"450","messageId":"451","endLine":14,"endColumn":17},{"ruleId":"448","severity":1,"message":"468","line":14,"column":19,"nodeType":"450","messageId":"451","endLine":14,"endColumn":29},{"ruleId":"452","severity":1,"message":"453","line":31,"column":6,"nodeType":"454","endLine":31,"endColumn":16,"suggestions":"519"},{"ruleId":"452","severity":1,"message":"470","line":43,"column":6,"nodeType":"454","endLine":43,"endColumn":35,"suggestions":"520"},{"ruleId":"448","severity":1,"message":"472","line":2,"column":10,"nodeType":"450","messageId":"451","endLine":2,"endColumn":14},{"ruleId":"448","severity":1,"message":"478","line":9,"column":10,"nodeType":"450","messageId":"451","endLine":9,"endColumn":15},{"ruleId":"448","severity":1,"message":"521","line":16,"column":9,"nodeType":"450","messageId":"451","endLine":16,"endColumn":10},{"ruleId":"452","severity":1,"message":"475","line":33,"column":6,"nodeType":"454","endLine":33,"endColumn":15,"suggestions":"522"},{"ruleId":"440","replacedBy":"523"},{"ruleId":"442","replacedBy":"524"},{"ruleId":"440","replacedBy":"525"},{"ruleId":"442","replacedBy":"526"},{"ruleId":"452","severity":1,"message":"527","line":45,"column":6,"nodeType":"454","endLine":45,"endColumn":22,"suggestions":"528"},{"ruleId":"448","severity":1,"message":"529","line":1,"column":24,"nodeType":"450","messageId":"451","endLine":1,"endColumn":28},{"ruleId":"448","severity":1,"message":"530","line":16,"column":10,"nodeType":"450","messageId":"451","endLine":16,"endColumn":21},{"ruleId":"448","severity":1,"message":"531","line":28,"column":10,"nodeType":"450","messageId":"451","endLine":28,"endColumn":21},{"ruleId":"448","severity":1,"message":"532","line":28,"column":23,"nodeType":"450","messageId":"451","endLine":28,"endColumn":37},{"ruleId":"448","severity":1,"message":"533","line":41,"column":10,"nodeType":"450","messageId":"451","endLine":41,"endColumn":26},{"ruleId":"448","severity":1,"message":"534","line":41,"column":28,"nodeType":"450","messageId":"451","endLine":41,"endColumn":47},{"ruleId":"452","severity":1,"message":"535","line":48,"column":6,"nodeType":"454","endLine":48,"endColumn":8,"suggestions":"536"},{"ruleId":"452","severity":1,"message":"453","line":59,"column":6,"nodeType":"454","endLine":59,"endColumn":15,"suggestions":"537"},{"ruleId":"448","severity":1,"message":"538","line":69,"column":9,"nodeType":"450","messageId":"451","endLine":69,"endColumn":22},{"ruleId":"448","severity":1,"message":"539","line":106,"column":11,"nodeType":"450","messageId":"451","endLine":106,"endColumn":15},{"ruleId":"440","replacedBy":"540"},{"ruleId":"442","replacedBy":"541"},{"ruleId":"448","severity":1,"message":"487","line":18,"column":3,"nodeType":"450","messageId":"451","endLine":18,"endColumn":19},{"ruleId":"448","severity":1,"message":"542","line":7,"column":3,"nodeType":"450","messageId":"451","endLine":7,"endColumn":12},{"ruleId":"448","severity":1,"message":"449","line":10,"column":3,"nodeType":"450","messageId":"451","endLine":10,"endColumn":8},{"ruleId":"440","replacedBy":"543"},{"ruleId":"442","replacedBy":"544"},{"ruleId":"452","severity":1,"message":"545","line":27,"column":6,"nodeType":"454","endLine":27,"endColumn":8,"suggestions":"546"},{"ruleId":"448","severity":1,"message":"547","line":11,"column":21,"nodeType":"450","messageId":"451","endLine":11,"endColumn":26},{"ruleId":"452","severity":1,"message":"545","line":42,"column":6,"nodeType":"454","endLine":42,"endColumn":8,"suggestions":"548"},{"ruleId":"448","severity":1,"message":"449","line":3,"column":26,"nodeType":"450","messageId":"451","endLine":3,"endColumn":31},"no-native-reassign",["549"],"no-negated-in-lhs",["550"],["549"],["550"],["549"],["550"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["551"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["552"],["553"],"React Hook useEffect has missing dependencies: 'history' and 'userLogin.userInfo'. Either include them or remove the dependency array.",["554"],["549"],["550"],["549"],["550"],["555"],["556"],"'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.",["557"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'clearQuestion' aren't valid dependencies because mutating them doesn't re-render the component.",["558"],"'Link' is defined but never used.",["549"],["550"],"React Hook useLayoutEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["559"],"'Card' is defined but never used.","'Alert' is defined but never used.","'Container' is defined but never used.","'add' is defined but never used.","'Loaders' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["549"],["550"],"'QUIZ_DELETE_FAIL' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'WelcomePage' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.",["549"],["550"],["549"],["550"],["549"],["550"],["549"],["550"],["560"],["561"],["562"],["563"],["549"],["550"],["549"],["550"],"'Box' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'match.params.id'. Either include them or remove the dependency array.",["564"],["565"],["566"],["567"],"'D' is assigned a value but never used.",["568"],["549"],["550"],["549"],["550"],"React Hook useEffect has a missing dependency: 'toast'. Either include it or remove the dependency array.",["569"],"'Flex' is defined but never used.","'ConeStriped' is defined but never used.","'subjectName' is assigned a value but never used.","'setSubjectName' is assigned a value but never used.","'quizResponseData' is assigned a value but never used.","'setQuizResponseData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'quizDetails?._id'. Either include them or remove the dependency array.",["570"],["571"],"'deleteHandler' is assigned a value but never used.","'data' is assigned a value but never used.",["549"],["550"],"'PDFViewer' is defined but never used.",["549"],["550"],"React Hook useEffect has missing dependencies: 'id' and 'token'. Either include them or remove the dependency array.",["572"],"'index' is assigned a value but never used.",["573"],"no-global-assign","no-unsafe-negation",{"desc":"574","fix":"575"},{"desc":"576","fix":"577"},{"desc":"574","fix":"578"},{"desc":"579","fix":"580"},{"desc":"574","fix":"581"},{"desc":"582","fix":"583"},{"desc":"574","fix":"584"},{"desc":"585","fix":"586"},{"desc":"587","fix":"588"},{"desc":"574","fix":"589"},{"desc":"582","fix":"590"},{"desc":"574","fix":"591"},{"desc":"576","fix":"592"},{"desc":"593","fix":"594"},{"desc":"579","fix":"595"},{"desc":"574","fix":"596"},{"desc":"585","fix":"597"},{"desc":"587","fix":"598"},{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"605","fix":"607"},"Update the dependencies array to be: [history, userInfo]",{"range":"608","text":"609"},"Update the dependencies array to be: [dispatch, id]",{"range":"610","text":"611"},{"range":"612","text":"609"},"Update the dependencies array to be: [history, userInfo, userLogin.userInfo]",{"range":"613","text":"614"},{"range":"615","text":"609"},"Update the dependencies array to be: [history, quizInfo]",{"range":"616","text":"617"},{"range":"618","text":"609"},"Update the dependencies array to be: [questionInfo, dispatch]",{"range":"619","text":"620"},"Update the dependencies array to be: [dispatch, success]",{"range":"621","text":"622"},{"range":"623","text":"609"},{"range":"624","text":"617"},{"range":"625","text":"609"},{"range":"626","text":"611"},"Update the dependencies array to be: [history, match.params.id, userInfo]",{"range":"627","text":"628"},{"range":"629","text":"614"},{"range":"630","text":"609"},{"range":"631","text":"620"},{"range":"632","text":"622"},"Update the dependencies array to be: [location.state, toast]",{"range":"633","text":"634"},"Update the dependencies array to be: [dispatch, quizDetails?._id]",{"range":"635","text":"636"},"Update the dependencies array to be: [history, success]",{"range":"637","text":"638"},"Update the dependencies array to be: [id, token]",{"range":"639","text":"640"},{"range":"641","text":"640"},[1084,1094],"[history, userInfo]",[1158,1160],"[dispatch, id]",[370,380],[1054,1064],"[history, userInfo, userLogin.userInfo]",[944,954],[1043,1053],"[history, quizInfo]",[1232,1242],[1502,1531],"[questionInfo, dispatch]",[992,1001],"[dispatch, success]",[1059,1069],[1158,1168],[1084,1094],[1160,1162],[1109,1119],"[history, match.params.id, userInfo]",[1054,1064],[1232,1242],[1502,1531],[1083,1092],[1338,1354],"[location.state, toast]",[1638,1640],"[dispatch, quizDetails?._id]",[1815,1824],"[history, success]",[696,698],"[id, token]",[1248,1250]]